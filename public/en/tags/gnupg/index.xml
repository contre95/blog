<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GnuPG on Contre</title>
    <link>https://blog.contre.io/en/tags/gnupg/</link>
    <description>Recent content in GnuPG on Contre</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 29 Jun 2020 13:15:55 +0000</lastBuildDate>
    <atom:link href="https://blog.contre.io/en/tags/gnupg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GPG &#43; SSH ?</title>
      <link>https://blog.contre.io/en/posts/gpg_1/</link>
      <pubDate>Mon, 29 Jun 2020 13:15:55 +0000</pubDate>
      <guid>https://blog.contre.io/en/posts/gpg_1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.contre.io/images/posts/gpg_1_banner.jpg&#34; alt=&#34;Intro&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This will be a small walk through on how to generate an authentication subkey on GPG and integrated with ssh. First of all bare in mind that will need a GPG key first in order to generate this subkey, if have not generated on yet refer to part 0 of these series.&lt;/p&gt;&#xA;&lt;h3 id=&#34;authentication-key&#34;&gt;Authentication Key&lt;/h3&gt;&#xA;&lt;p&gt;In order to generate an authentication key, as I mentioned before, you will need to have a key generated. Let&amp;rsquo;s check that with&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dealing with your private key</title>
      <link>https://blog.contre.io/en/posts/gpg_2/</link>
      <pubDate>Sat, 25 Apr 2020 00:15:55 +0000</pubDate>
      <guid>https://blog.contre.io/en/posts/gpg_2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.contre.io/images/posts/gpg_2_banner.jpg&#34; alt=&#34;Intro&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Now that you&amp;rsquo;ve managed to create your own GPG key it&amp;rsquo;s time to understand a bit more about how GnuPG works.&lt;/p&gt;&#xA;&lt;p&gt;The first question we need to ask is where are our keys stored. The answer depends on which version of GnuPG you are running. From version 2.1 onwards the method of storing your keys &lt;a href=&#34;https://gnupg.org/faq/whats-new-in-2.1.html&#34;&gt;has change&lt;/a&gt;. On previous versions our keys were stored in two separate keyring under the &lt;code&gt;~/.gnupg&lt;/code&gt; directory. Prior version to 2.1 used to keep the public key pairs in two files: &lt;code&gt;pubring.gpg&lt;/code&gt; and &lt;code&gt;secring.gpg&lt;/code&gt;, you can imagine which stores which.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with GnuPG</title>
      <link>https://blog.contre.io/en/posts/gpg_0/</link>
      <pubDate>Wed, 15 Apr 2020 00:15:55 +0000</pubDate>
      <guid>https://blog.contre.io/en/posts/gpg_0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.contre.io/images/posts/gpg_0_banner.jpg&#34; alt=&#34;Intro&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;GnuPG is a complete and free implementation of the OpenPGP standard and this is just &lt;strong&gt;part 0&lt;/strong&gt; of who knows how many series where I will explain my basic understanding of GPG and how useful is on my daily basis. If you wish to understand more in detail how GPG work please refer to the RFC or &lt;a href=&#34;https://davesteele.github.io/gpg/2014/09/20/anatomy-of-a-gpg-key/&#34;&gt;here&lt;/a&gt; is a great post that captures the essence of it quite deeply.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
